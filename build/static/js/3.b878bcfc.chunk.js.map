{"version":3,"sources":["components/Order/Order/Order.module.css","components/Order/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","border","margin","display","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","orders","Spinner","loading","id","Component","connect","state","dispatch","actions","withErrorHandler","axios"],"mappings":"yIACAA,EAAOC,QAAU,CAAC,MAAQ,uB,oICsCXC,EApCD,SAACC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EACJL,EAAYM,KAAI,SAACC,GACf,OACE,0BACEC,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,OAAQ,iBACRC,OAAQ,QACRC,QAAS,iBAGVN,EAAGJ,KATN,KAScI,EAAGH,OATjB,SAYE,GACR,OACE,yBAAKU,UAAWC,IAAQC,OACtB,2CAAiBX,GACjB,qCACS,wCAAcY,OAAOC,WAAWnB,EAAMoB,OAAOC,QAAQ,O,gCCxB9DC,E,kLAEFC,KAAKvB,MAAMwB,kB,+BAIX,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAYb,OAXKH,KAAKvB,MAAM2B,UACdF,EAASF,KAAKvB,MAAMyB,OAAOlB,KAAI,SAACR,GAC9B,OACE,kBAACkB,EAAD,CACER,IAAKV,EAAM6B,GACXR,MAAOrB,EAAMqB,MACbnB,YAAaF,EAAME,kBAKpB,yBAAKc,UAAWC,IAAQM,QAASG,O,GAlBvBI,aAmCNC,uBAbS,SAACC,GACvB,MAAO,CACLN,OAAQM,EAAMhC,MAAM0B,OACpBE,QAASI,EAAMhC,MAAM4B,YAIE,SAACK,GAC1B,MAAO,CACLR,cAAe,kBAAMQ,EAASC,WAInBH,CAGbI,YAAiBZ,EAAQa","file":"static/js/3.b878bcfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1XbSk\"};","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst order = (props) => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName],\n    });\n  }\n\n  const ingredientOutput =\n    ingredients.map((ig) => {\n      return (\n        <span\n          key={ig.name}\n          style={{\n            textTransform: \"capitalize\",\n            border: \"1px solid #CCC\",\n            margin: \"0 8px\",\n            display: \"inline-block\",\n          }}\n        >\n          {ig.name} ({ig.amount})\n        </span>\n      );\n    }) || [];\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD: {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from \"react\";\nimport classes from \"./Orders.module.css\";\nimport axios from \"../../hoc/axios-order\";\nimport Order from \"../../components/Order/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders();\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map((order) => {\n        return (\n          <Order\n            key={order.id}\n            price={order.price}\n            ingredients={order.ingredients}\n          />\n        );\n      });\n    }\n    return <div className={classes.Orders}>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}